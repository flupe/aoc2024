#!/usr/bin/bash
set -e

aoc_fetch(){
  if ! [ -f "inputs/$2" ]; then
    echo "Fetching input file for day $2"
    curl -b ./COOKIE "https://adventofcode.com/2024/day/$2/input" \
         --fail \
         -o inputs/$2
  else
    echo "Input file inputs/$2 already exists."
  fi
}

aoc_build(){
  mkdir -p build
  ghc -main-is $mod \
      -O2 \
      -isrc $hs \
      -outputdir aux \
      -o build/$mod
}

aoc_hs(){
  printf -v mod "Day%02d" $2
  hs=src/$mod.hs
}

case $1 in
  "fetch")
    aoc_fetch $@
    ;;

  "edit")
    aoc_hs $@
    nvim $hs
    ;;

  "init")
    aoc_fetch $@
    aoc_hs $@
    if ! [ -f $hs ]; then
      sed -e "s/:day:/$2/g" -e "s/:mod:/$mod/g" template > $hs
    else
      echo "File $hs already exists."
    fi
    nvim $hs
    ;;

  "run")
    aoc_hs $@
    runghc -isrc $hs
    ;;

  "build")
    aoc_hs $@
    aoc_build $@
    ;;

  "time")
    aoc_hs $@
    aoc_build $@
    hyperfine --warmup 3 -N ./build/$mod
    ;;

  "repl")
    aoc_hs $@
    ghci -isrc $hs
    ;;

  *)
    echo "Usage: $0 <subcommand> [options]"
    echo "Subcommands:"
    echo "  init <day>   Create daily Haskell source from template"
    echo "  fetch <day>  Retrieve daily input file"
    echo "  run <day>    Run daily Haskell source"
    echo "  build <day>  Build daily Haskell source"
    echo "  repl <day>   Open REPL on daily Haskell source"
    echo "  time <day>   Build and measure daily Haskell program"
esac
